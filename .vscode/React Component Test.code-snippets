{
  "React Component Tests": {
    "prefix": "react:test",
    "body": [
      "import { render } from '@testing-library/react';",
      "import { describe, expect, it } from 'vitest';",
      "import { axe } from 'vitest-axe';",
      "import ${1:ComponentName} from './${1:componentName}';",
      "",
      "describe('Components > ${1:ComponentName}', () => {",
      "  // Config variables and contexts like beforeAll, beforeEach, etc.",
      "  // These hooks can be used to set up any required state or props before running tests",
      "",
      "  describe('Snapshot', () => {",
      "    // Snapshot tests are useful for ensuring the UI does not change unexpectedly.",
      "    // They create a snapshot of the rendered component and compare it to a stored snapshot.",
      "    it('Should match snapshot without Subtitle', () => {",
      "      const { container } = render(<${1:ComponentName} title={mockTitleProp} />);",
      "",
      "      expect(container).toMatchSnapshot();",
      "    });",
      "    // Add more snapshot tests as needed",
      "  });",
      "",
      "  describe('Accessibility Tests (A11y)', () => {",
      "    // Accessibility tests ensure the component complies with accessibility standards.",
      "    // These tests help catch issues that could impact users with disabilities.",
      "    it('Should not have accessibility violations with only title', async () => {",
      "      const { container } = render(<${1:ComponentName} title={mockTitleProp} />);",
      "",
      "      expect(await axe(container)).toHaveNoViolations();",
      "    });",
      "    // Add more accessibility tests as needed",
      "  });",
      "",
      "  describe('Rendering', () => {",
      "    // Rendering tests ensure the component renders correctly with various props and states.",
      "    // These tests check for the presence of elements and correct rendering of dynamic content.",
      "    it('Should render title correctly', () => {",
      "      const { getByText } = render(<${1:ComponentName} title={mockTitleProp} />);",
      "",
      "      expect(getByText(mockTitleProp)).toBeInTheDocument();",
      "    });",
      "    // Add more rendering tests as needed",
      "  });",
      "",
      "  describe('CSS Classes and Styles', () => {",
      "    // CSS classes and styles tests ensure the component applies the correct styles.",
      "    // These tests check for the presence of specific classes and inline styles.",
      "    it('Should have the correct class for title', () => {",
      "      const { container } = render(<${1:ComponentName} title={mockTitleProp} />);",
      "",
      "      const titleElement = container.querySelector('.title-class');",
      "      expect(titleElement).toBeInTheDocument();",
      "    });",
      "    // Add more CSS class and style tests as needed",
      "  });",
      "});",
    ],
    "description": "Create a test suite for a React component with snapshot, accessibility, rendering, and CSS class tests",
  },
}
